version: "3"

services:
  flask_app:
    container_name: flask_app
    image: sttapp:0.1.01
    build:
      context: ./sttapp
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=sttredis
      - DB_HOST=sttmongo
    command: gunicorn -w 1 -b 0.0.0.0:8000 sttapp.wsgi:app --log-level debug --reload
    networks:
      - backend_redis
      - backend_mongo
    restart: "unless-stopped"
    volumes:
      - ./:/app/

  worker:
    container_name: worker
    image: sttworker:0.1.01
    build:
      context: ./sttapp
    env_file:
      - .env
    environment:
      - REDIS_HOST=sttredis
      - DB_HOST=sttmongo
    networks:
      - backend_redis
      - backend_mongo
    depends_on:
      - redis
      - mongo
    command: celery -A sttapp.celery_worker.celery worker -l info
    restart: "unless-stopped"
    volumes:
      - ./:/app/

  redis:
    container_name: sttredis
    image: redis
    restart: "unless-stopped"
    ports:
      - "6379:6379"
    volumes:
      - .data/dataRedis:/data/
    # command: echo never > /sys/kernel/mm/transparent_hugepage/enabled or sysctl vm.overcommit_memory=1
    networks:
      - backend_redis

  mongo:
    container_name: sttmongo
    image: mongo:4.2.6
    volumes:
      - .data/dataMongo/:/data/db/
    ports:
      - "27017:27017"
    command: "mongod --auth"
    restart: "unless-stopped"
    networks:
      - backend_mongo

networks:
  backend_redis:
  backend_mongo:
