version: "3"

services:
  flask_app:
    container_name: flask_app
    restart: "unless-stopped"
    build: ./sttapp
    env_file:
      - .env
    environment:
      - REDIS_URL=redis
    command: gunicorn -w 1 -b 0.0.0.0:8000 sttapp.wsgi:app --log-level debug
    networks:
      - backend_redis
      - webserver
    depends_on:
      - redis
    volumes:
      - ./:/app/

  worker:
    container_name: worker
    restart: "unless-stopped"
    build: ./sttapp
    env_file:
      - .env
    networks:
      - backend_redis
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis
    command: celery -A sttapp.celery_worker.celery worker -l info
    volumes:
      - ./:/app/

  nginx:
    container_name: nginx
    restart: "unless-stopped"
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - flask_app
    volumes:
      - ./static/:/var/www/static/
    networks:
      - webserver

  redis:
    container_name: redis
    image: redis
    restart: "unless-stopped"
    volumes:
      - .data/dataRedis:/data/
    # command: echo never > /sys/kernel/mm/transparent_hugepage/enabled
    networks:
      - backend_redis

networks:
  backend_redis:
  webserver:
